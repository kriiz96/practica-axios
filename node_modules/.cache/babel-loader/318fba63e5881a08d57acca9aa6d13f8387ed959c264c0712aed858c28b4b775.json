{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\C\\\\Downloads\\\\practica-axios-master\\\\src\\\\paginas\\\\crud\\\\Cruds.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cruds = () => {\n  _s();\n  const [codigo, setCodigo] = useState('');\n  const [fecha, setFecha] = useState('');\n  const [nombre, setNombre] = useState('');\n  const [direccion, setDireccion] = useState('');\n  const [tfno, setTfno] = useState('');\n  const [diagnostico, setDiagnostico] = useState('');\n  const [tratamiento, setTratamiento] = useState('');\n  const [medico, setMedico] = useState('');\n  const [lista, setLista] = useState([]);\n  const [modoEdicion, setModoEdicion] = useState(false);\n  const generarId = () => {\n    return Math.floor(Math.random() * 100000000);\n  };\n  const llenarCampos = dato => {\n    Swal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'El campo: ${dato} esta vacio'\n    });\n  };\n  const agregarUsuario = e => {\n    e.preventDefault();\n    if (fecha.trim() === '') {\n      llenarCampos('Fecha');\n      return;\n    }\n    if (nombre.trim() === '') {\n      llenarCampos('Nombre');\n      return;\n    }\n    if (direccion.trim() === '') {\n      llenarCampos('Direcci贸n');\n      return;\n    }\n    if (tfno.trim() === '') {\n      llenarCampos('Tfno');\n      return;\n    }\n    if (diagnostico.trim() === '') {\n      llenarCampos('Diagn贸stico');\n      return;\n    }\n    if (tratamiento.trim() === '') {\n      llenarCampos('Tratamiento');\n      return;\n    }\n    if (medico.trim() === '') {\n      llenarCampos('Medico');\n      return;\n    }\n    const usuario = {\n      codigo: generarId(),\n      fecha,\n      nombre,\n      direccion,\n      tfno,\n      diagnostico,\n      tratamiento,\n      medico\n    };\n    setLista([...lista, usuario]);\n    setFecha('');\n    setNombre('');\n    setDireccion('');\n    setTfno('');\n    setDiagnostico('');\n    setTratamiento('');\n    setMedico('');\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'Datos Guardados',\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n  const editar = persona => {\n    setCodigo(persona.codigo);\n    setFecha(persona, fecha); //moment(cell).format(\"YYYY-MM-DD\")\n    setNombre(persona.nombre);\n    setDireccion(persona.direccion);\n    setTfno(persona.tfno);\n    setDiagnostico(persona.diagnostico);\n    setTratamiento(persona.tratamiento);\n    setMedico(persona.medico);\n    setModoEdicion(true);\n  };\n  const guardarCambios = e => {\n    e.preventDefault();\n    if (fecha.trim() === '') {\n      llenarCampos('Fecha');\n      return;\n    }\n    if (nombre.trim() === '') {\n      llenarCampos('Nombre');\n      return;\n    }\n    if (direccion.trim() === '') {\n      llenarCampos('Direccion');\n      return;\n    }\n    if (tfno.trim() === '') {\n      llenarCampos('Telefono');\n      return;\n    }\n    if (diagnostico.trim() === '') {\n      llenarCampos('Diagnostico');\n      return;\n    }\n    if (tratamiento.trim() === '') {\n      llenarCampos('Tratamiento');\n      return;\n    }\n    if (medico.trim() === '') {\n      llenarCampos('Medico');\n      return;\n    }\n    const editado = lista.map(persona => persona.codigo === codigo ? {\n      codigo,\n      fecha,\n      nombre,\n      direccion,\n      tfno,\n      diagnostico,\n      tratamiento,\n      medico\n    } : persona);\n    setLista(editado);\n    setModoEdicion(false);\n    setFecha('');\n    setNombre('');\n    setDireccion('');\n    setTfno('');\n    setDiagnostico('');\n    setTratamiento('');\n    setMedico('');\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      title: 'Datos Actualizados',\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n  const eliminar = codigo => {\n    //2 parametros, el primero es el item y el segundo es el index\n\n    Swal.fire({\n      title: 'Estas seguro de eliminar el registro?',\n      text: \"No podras revertir esta accion!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Si, eliminar!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        const filtro = lista.filter(persona => persona.codigo !== codigo);\n        setLista(filtro);\n        Swal.fire('Eliminado!', 'El registro ha sido eliminado.', 'success');\n      }\n    });\n  };\n  const tableCustomStyles = {\n    headCells: {\n      style: {\n        backgroundColor: '#6889F1'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cruds\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(Cruds, \"NfEidLMda3Re9mT2sCZ7FI+ZdRc=\");\n_c = Cruds;\nexport default Cruds;\nvar _c;\n$RefreshReg$(_c, \"Cruds\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Cruds","_s","codigo","setCodigo","useState","fecha","setFecha","nombre","setNombre","direccion","setDireccion","tfno","setTfno","diagnostico","setDiagnostico","tratamiento","setTratamiento","medico","setMedico","lista","setLista","modoEdicion","setModoEdicion","generarId","Math","floor","random","llenarCampos","dato","Swal","fire","icon","title","text","agregarUsuario","e","preventDefault","trim","usuario","position","showConfirmButton","timer","editar","persona","guardarCambios","editado","map","eliminar","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","filtro","filter","tableCustomStyles","headCells","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/C/Downloads/practica-axios-master/src/paginas/crud/Cruds.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Cruds = () => {\r\n\r\n    const[codigo,setCodigo]=useState('')\r\n    const[fecha,setFecha]=useState('')\r\n    const[nombre,setNombre]=useState('')\r\n    const[direccion,setDireccion]=useState('')\r\n    const[tfno,setTfno]=useState('')\r\n    const[diagnostico,setDiagnostico]=useState('')\r\n    const[tratamiento, setTratamiento] = useState('')\r\n    const[medico, setMedico] = useState('')\r\n    const[lista,setLista]=useState([])\r\n    const[modoEdicion,setModoEdicion]=useState(false)\r\n\r\n    const generarId =()=>{\r\n      return Math.floor(Math.random()*100000000)\r\n    }\r\n\r\n    const llenarCampos = (dato) => {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'El campo: ${dato} esta vacio',\r\n            })\r\n    }\r\n        \r\n\r\n    const agregarUsuario = (e) => {\r\n\r\n        e.preventDefault()\r\n        \r\n        if(fecha.trim() === ''){\r\n            llenarCampos('Fecha')\r\n            return\r\n        }\r\n        if(nombre.trim() === ''){\r\n            llenarCampos('Nombre')\r\n            return\r\n        }\r\n        if(direccion.trim() === ''){\r\n            llenarCampos('Direcci贸n')\r\n            return\r\n        }\r\n        if(tfno.trim() === ''){\r\n            llenarCampos('Tfno')\r\n            return\r\n        }\r\n        if(diagnostico.trim() === ''){\r\n            llenarCampos('Diagn贸stico')\r\n            return\r\n        }\r\n        if(tratamiento.trim() === ''){\r\n            llenarCampos('Tratamiento')\r\n            return\r\n        }\r\n        if(medico.trim() === ''){\r\n            llenarCampos('Medico')\r\n            return\r\n        }\r\n    \r\n        const usuario = {codigo:generarId(),fecha,nombre,direccion,tfno,diagnostico,tratamiento,medico}\r\n        setLista([...lista,usuario])\r\n        \r\n        setFecha('')\r\n        setNombre('')\r\n        setDireccion('')\r\n        setTfno('')\r\n        setDiagnostico('')\r\n        setTratamiento('')\r\n        setMedico('')\r\n\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Datos Guardados',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n    }\r\n\r\n    const editar = (persona) => {\r\n      setCodigo(persona.codigo)\r\n      setFecha(persona,fecha)//moment(cell).format(\"YYYY-MM-DD\")\r\n      setNombre(persona.nombre)\r\n      setDireccion(persona.direccion)\r\n      setTfno(persona.tfno)\r\n      setDiagnostico(persona.diagnostico)\r\n      setTratamiento(persona.tratamiento)\r\n      setMedico(persona.medico)\r\n      setModoEdicion(true)\r\n    }\r\n    const guardarCambios=(e)=>{\r\n        e.preventDefault()\r\n        if(fecha.trim()===''){\r\n          llenarCampos('Fecha')\r\n          return\r\n        }\r\n        if(nombre.trim()===''){\r\n          llenarCampos('Nombre')\r\n          return\r\n        }\r\n        if(direccion.trim()===''){\r\n          llenarCampos('Direccion')\r\n          return\r\n        }\r\n        if(tfno.trim()===''){\r\n          llenarCampos('Telefono')\r\n          return\r\n        }\r\n        if(diagnostico.trim()===''){\r\n          llenarCampos('Diagnostico')\r\n          return\r\n        }\r\n        if(tratamiento.trim()===''){\r\n          llenarCampos('Tratamiento')\r\n          return\r\n        }\r\n        if(medico.trim()===''){\r\n          llenarCampos('Medico')\r\n          return\r\n        }\r\n  \r\n        const editado = lista.map(persona => persona.codigo === codigo ? {codigo,fecha,nombre,direccion,tfno,diagnostico,tratamiento,medico} : persona)\r\n        setLista(editado)\r\n        setModoEdicion(false)\r\n  \r\n        setFecha('')\r\n        setNombre('')\r\n        setDireccion('')\r\n        setTfno('')\r\n        setDiagnostico('')\r\n        setTratamiento('')\r\n        setMedico('')\r\n        \r\n        Swal.fire({\r\n          position: 'center',\r\n          icon: 'success',\r\n          title: 'Datos Actualizados',\r\n          showConfirmButton: false,\r\n          timer: 1500\r\n          })\r\n      }\r\n  \r\n      const eliminar = (codigo) => { //2 parametros, el primero es el item y el segundo es el index\r\n          \r\n          Swal.fire({\r\n              title: 'Estas seguro de eliminar el registro?',\r\n              text: \"No podras revertir esta accion!\",\r\n              icon: 'warning',\r\n              showCancelButton: true,\r\n              confirmButtonColor: '#3085d6',\r\n              cancelButtonColor: '#d33',\r\n              confirmButtonText: 'Si, eliminar!'\r\n              }).then((result) => {\r\n              \r\n                  if (result.isConfirmed) {\r\n                  const filtro = lista.filter((persona)=>persona.codigo!==codigo)\r\n                  \r\n                  setLista(filtro)\r\n                  Swal.fire(\r\n                  'Eliminado!',\r\n                  'El registro ha sido eliminado.',\r\n                  'success'\r\n                  )\r\n              }\r\n              })\r\n      }\r\n     \r\n      const tableCustomStyles = {\r\n        headCells: {\r\n          style: {\r\n            backgroundColor: '#6889F1'\r\n          }\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>Cruds</div>\r\n  )\r\n}\r\n\r\nexport default Cruds"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAK,CAACC,MAAM,EAACC,SAAS,CAAC,GAACC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACF,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACG,MAAM,EAACC,SAAS,CAAC,GAACJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAK,CAACK,SAAS,EAACC,YAAY,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAK,CAACO,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAK,CAACS,WAAW,EAACC,cAAc,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAK,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAK,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAK,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAChB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACiB,WAAW,EAACC,cAAc,CAAC,GAAClB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMmB,SAAS,GAAEA,CAAA,KAAI;IACnB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,SAAS,CAAC;EAC5C,CAAC;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC3BC,IAAI,CAACC,IAAI,CAAC;MACNC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACN,CAAC,CAAC;EACV,CAAC;EAGD,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAE1BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAG/B,KAAK,CAACgC,IAAI,EAAE,KAAK,EAAE,EAAC;MACnBV,YAAY,CAAC,OAAO,CAAC;MACrB;IACJ;IACA,IAAGpB,MAAM,CAAC8B,IAAI,EAAE,KAAK,EAAE,EAAC;MACpBV,YAAY,CAAC,QAAQ,CAAC;MACtB;IACJ;IACA,IAAGlB,SAAS,CAAC4B,IAAI,EAAE,KAAK,EAAE,EAAC;MACvBV,YAAY,CAAC,WAAW,CAAC;MACzB;IACJ;IACA,IAAGhB,IAAI,CAAC0B,IAAI,EAAE,KAAK,EAAE,EAAC;MAClBV,YAAY,CAAC,MAAM,CAAC;MACpB;IACJ;IACA,IAAGd,WAAW,CAACwB,IAAI,EAAE,KAAK,EAAE,EAAC;MACzBV,YAAY,CAAC,aAAa,CAAC;MAC3B;IACJ;IACA,IAAGZ,WAAW,CAACsB,IAAI,EAAE,KAAK,EAAE,EAAC;MACzBV,YAAY,CAAC,aAAa,CAAC;MAC3B;IACJ;IACA,IAAGV,MAAM,CAACoB,IAAI,EAAE,KAAK,EAAE,EAAC;MACpBV,YAAY,CAAC,QAAQ,CAAC;MACtB;IACJ;IAEA,MAAMW,OAAO,GAAG;MAACpC,MAAM,EAACqB,SAAS,EAAE;MAAClB,KAAK;MAACE,MAAM;MAACE,SAAS;MAACE,IAAI;MAACE,WAAW;MAACE,WAAW;MAACE;IAAM,CAAC;IAC/FG,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAACmB,OAAO,CAAC,CAAC;IAE5BhC,QAAQ,CAAC,EAAE,CAAC;IACZE,SAAS,CAAC,EAAE,CAAC;IACbE,YAAY,CAAC,EAAE,CAAC;IAChBE,OAAO,CAAC,EAAE,CAAC;IACXE,cAAc,CAAC,EAAE,CAAC;IAClBE,cAAc,CAAC,EAAE,CAAC;IAClBE,SAAS,CAAC,EAAE,CAAC;IAEbW,IAAI,CAACC,IAAI,CAAC;MACNS,QAAQ,EAAE,QAAQ;MAClBR,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,iBAAiB;MACxBQ,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAE;IACX,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,MAAM,GAAIC,OAAO,IAAK;IAC1BxC,SAAS,CAACwC,OAAO,CAACzC,MAAM,CAAC;IACzBI,QAAQ,CAACqC,OAAO,EAACtC,KAAK,CAAC;IACvBG,SAAS,CAACmC,OAAO,CAACpC,MAAM,CAAC;IACzBG,YAAY,CAACiC,OAAO,CAAClC,SAAS,CAAC;IAC/BG,OAAO,CAAC+B,OAAO,CAAChC,IAAI,CAAC;IACrBG,cAAc,CAAC6B,OAAO,CAAC9B,WAAW,CAAC;IACnCG,cAAc,CAAC2B,OAAO,CAAC5B,WAAW,CAAC;IACnCG,SAAS,CAACyB,OAAO,CAAC1B,MAAM,CAAC;IACzBK,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAMsB,cAAc,GAAET,CAAC,IAAG;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAG/B,KAAK,CAACgC,IAAI,EAAE,KAAG,EAAE,EAAC;MACnBV,YAAY,CAAC,OAAO,CAAC;MACrB;IACF;IACA,IAAGpB,MAAM,CAAC8B,IAAI,EAAE,KAAG,EAAE,EAAC;MACpBV,YAAY,CAAC,QAAQ,CAAC;MACtB;IACF;IACA,IAAGlB,SAAS,CAAC4B,IAAI,EAAE,KAAG,EAAE,EAAC;MACvBV,YAAY,CAAC,WAAW,CAAC;MACzB;IACF;IACA,IAAGhB,IAAI,CAAC0B,IAAI,EAAE,KAAG,EAAE,EAAC;MAClBV,YAAY,CAAC,UAAU,CAAC;MACxB;IACF;IACA,IAAGd,WAAW,CAACwB,IAAI,EAAE,KAAG,EAAE,EAAC;MACzBV,YAAY,CAAC,aAAa,CAAC;MAC3B;IACF;IACA,IAAGZ,WAAW,CAACsB,IAAI,EAAE,KAAG,EAAE,EAAC;MACzBV,YAAY,CAAC,aAAa,CAAC;MAC3B;IACF;IACA,IAAGV,MAAM,CAACoB,IAAI,EAAE,KAAG,EAAE,EAAC;MACpBV,YAAY,CAAC,QAAQ,CAAC;MACtB;IACF;IAEA,MAAMkB,OAAO,GAAG1B,KAAK,CAAC2B,GAAG,CAACH,OAAO,IAAIA,OAAO,CAACzC,MAAM,KAAKA,MAAM,GAAG;MAACA,MAAM;MAACG,KAAK;MAACE,MAAM;MAACE,SAAS;MAACE,IAAI;MAACE,WAAW;MAACE,WAAW;MAACE;IAAM,CAAC,GAAG0B,OAAO,CAAC;IAC/IvB,QAAQ,CAACyB,OAAO,CAAC;IACjBvB,cAAc,CAAC,KAAK,CAAC;IAErBhB,QAAQ,CAAC,EAAE,CAAC;IACZE,SAAS,CAAC,EAAE,CAAC;IACbE,YAAY,CAAC,EAAE,CAAC;IAChBE,OAAO,CAAC,EAAE,CAAC;IACXE,cAAc,CAAC,EAAE,CAAC;IAClBE,cAAc,CAAC,EAAE,CAAC;IAClBE,SAAS,CAAC,EAAE,CAAC;IAEbW,IAAI,CAACC,IAAI,CAAC;MACRS,QAAQ,EAAE,QAAQ;MAClBR,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,oBAAoB;MAC3BQ,iBAAiB,EAAE,KAAK;MACxBC,KAAK,EAAE;IACP,CAAC,CAAC;EACN,CAAC;EAED,MAAMM,QAAQ,GAAI7C,MAAM,IAAK;IAAE;;IAE3B2B,IAAI,CAACC,IAAI,CAAC;MACNE,KAAK,EAAE,uCAAuC;MAC9CC,IAAI,EAAE,iCAAiC;MACvCF,IAAI,EAAE,SAAS;MACfiB,gBAAgB,EAAE,IAAI;MACtBC,kBAAkB,EAAE,SAAS;MAC7BC,iBAAiB,EAAE,MAAM;MACzBC,iBAAiB,EAAE;IACnB,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;MAEhB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACxB,MAAMC,MAAM,GAAGpC,KAAK,CAACqC,MAAM,CAAEb,OAAO,IAAGA,OAAO,CAACzC,MAAM,KAAGA,MAAM,CAAC;QAE/DkB,QAAQ,CAACmC,MAAM,CAAC;QAChB1B,IAAI,CAACC,IAAI,CACT,YAAY,EACZ,gCAAgC,EAChC,SAAS,CACR;MACL;IACA,CAAC,CAAC;EACV,CAAC;EAED,MAAM2B,iBAAiB,GAAG;IACxBC,SAAS,EAAE;MACTC,KAAK,EAAE;QACLC,eAAe,EAAE;MACnB;IACF;EACF,CAAC;EAEL,oBACE7D,OAAA;IAAA8D,QAAA,EAAK;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEpB,CAAC;AAAAhE,EAAA,CAlLKD,KAAK;AAAAkE,EAAA,GAALlE,KAAK;AAoLX,eAAeA,KAAK;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}